#!/usr/bin/env bash
# ----------------------------------------------------------------------------
# Rendered script for demo_report
# - Demonstrates using ctx.* in a Jinja template
# - Writes a small results.txt and metrics.json for the resolver to consume
# ----------------------------------------------------------------------------
set -euo pipefail

# Resolve paths
OUT_DIR="{{ ctx.project_dir }}/{{ ctx.template.id }}"
mkdir -p "$OUT_DIR"

SAMPLE_ID="{{ ctx.params.sample_id }}"
THREADS={{ ctx.params.threads }}
TRIM={{ 'true' if ctx.params.trim else 'false' }}
CUTOFF={{ ctx.params.cutoff }}
CONTACT="{{ ctx.params.get('contact_email', '') }}"

# Write a tiny README and a results file to simulate work
cat > "$OUT_DIR/results.txt" << EOF
Sample: $SAMPLE_ID
Threads: $THREADS
Trim: $TRIM
Cutoff: $CUTOFF
Contact: $CONTACT
RenderedAt: {{ ctx.now() }}
Host: {{ ctx.hostname() }}
EOF

# Produce a simple metrics.json (keep it shell- and platform-friendly)
cat > "$OUT_DIR/metrics.json" << JSON
{
  "sample_id": "$SAMPLE_ID",
  "threads_used": $THREADS,
  "trim_enabled": $TRIM,
  "cutoff": $CUTOFF,
  "lines_in_results": $(wc -l < "$OUT_DIR/results.txt" | tr -d ' ')
}
JSON

echo "[ok] demo_report: generated results in $OUT_DIR" >&2
